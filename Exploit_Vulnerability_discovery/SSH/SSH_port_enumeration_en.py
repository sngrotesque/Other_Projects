import socket
from sys import argv,exit,platform
from os import system as sy
from colorama import Fore,Style
import re

if len(argv)<2:
    print(Fore.LIGHTBLUE_EX+"[-]Usage Method: python3 %s [IP] [Port range]"%argv[0])
    print("[-]For example: python %s 127.0.0.1 22-34"%argv[0])
    print("[-]If you do not specify a port range, the script will start at port 0 and end at port 65535\n\
    \r[-]Range symbols can use any symbol except numbers and spaces, such as (22,34), (22=34), (22p34), etc")
    exit(Fore.LIGHTRED_EX+"[*]Warning: this script will clear other contents of terminal output.(Commandï¼šclear)\n\
    \r[*]The connection timeout time is [0.2] seconds by default and can be modified by yourself."+Style.RESET_ALL)

host=argv[1]
sdata=b"SSH-2.0-OpenSSH_8.4p1 Debian-5"

try:
    portrange=re.findall(r"\d+",argv[2],re.S)
    for x in range(len(portrange)):
        portrange[x]=int(portrange[x])

    min_port=portrange[0]
    max_port=portrange[1]

    while min_port <= max_port:
        if platform=="linux":
            sy("clear")
        elif platform=="win32":
            sy("cls")
        print("[-]Testing [%d] port..."%min_port)
        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.settimeout(0.2)
        res=b""
        try:
            s.connect((host,min_port))
            s.sendall(sdata)
            res=s.recv(512)
            try:
                res=re.findall(b"(SSH.*)",res,re.S)[0]
                exit(Fore.LIGHTCYAN_EX+"[+][%d] Port is SSH protocol, Recv: %s"%(min_port,str(res,encoding="utf8",errors="ignore")))
            except IndexError:
                continue
        except socket.timeout:
            print("[%d] Port connection timeout"%min_port)
        except ConnectionRefusedError:
            print("Connection reset...")
        min_port+=1
except IndexError:
    for x in range(65536):
        if platform=="linux":
            sy("clear")
        elif platform=="win32":
            sy("cls")
        print("[-]Testing [%d] port..."%x)
        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.settimeout(0.2)
        res=b""
        try:
            s.connect((host,x))
            s.sendall(sdata)
            res=s.recv(512)
            try:
                res=re.findall(b"(SSH.*)",res,re.S)[0]
                exit(Fore.LIGHTCYAN_EX+"[+][%d] Port is SSH protocol, Recv: %s"%(x,str(res,encoding="utf8",errors="ignore")))
            except IndexError:
                continue
        except socket.timeout:
            print("[%d] Port connection timeout"%x)
        except ConnectionRefusedError:
            print("Connection reset...")
        s.close()
